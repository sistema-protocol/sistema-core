{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "ExecuteMsg",
  "oneOf": [
    {
      "type": "object",
      "required": [
        "update_config"
      ],
      "properties": {
        "update_config": {
          "type": "object",
          "properties": {
            "auction_contract": {
              "description": "Auction contract address",
              "type": [
                "string",
                "null"
              ]
            },
            "fee_wait_period": {
              "description": "Fee wait period in days",
              "type": [
                "integer",
                "null"
              ],
              "format": "uint64",
              "minimum": 0.0
            },
            "governance_contract": {
              "description": "Governance contract address",
              "type": [
                "string",
                "null"
              ]
            },
            "incentive_schedule": {
              "description": "Incentive scheduling",
              "anyOf": [
                {
                  "$ref": "#/definitions/StakeDistribution"
                },
                {
                  "type": "null"
                }
              ]
            },
            "keep_raw_cdt": {
              "description": "Toggle to keep raw CDT revenue If false, CDT revenue is converted in the FeeAuction",
              "type": [
                "boolean",
                "null"
              ]
            },
            "max_commission_rate": {
              "description": "Max commission rate",
              "anyOf": [
                {
                  "$ref": "#/definitions/Decimal"
                },
                {
                  "type": "null"
                }
              ]
            },
            "tema_denom": {
              "description": "TEMA denom",
              "type": [
                "string",
                "null"
              ]
            },
            "osmosis_proxy": {
              "description": "Osmosis Proxy contract address",
              "type": [
                "string",
                "null"
              ]
            },
            "owner": {
              "description": "Contract owner",
              "type": [
                "string",
                "null"
              ]
            },
            "positions_contract": {
              "description": "Positions contract address",
              "type": [
                "string",
                "null"
              ]
            },
            "unstaking_period": {
              "description": "Unstaking period in days",
              "type": [
                "integer",
                "null"
              ],
              "format": "uint64",
              "minimum": 0.0
            },
            "vesting_contract": {
              "description": "Vesting contract address",
              "type": [
                "string",
                "null"
              ]
            },
            "vesting_rev_multiplier": {
              "description": "Vesting contract revenue multiplier Transforms the total stake in the revenue calculations, not the revenue directly WARNING: SETTING TO 0 IS PERMANENT",
              "anyOf": [
                {
                  "$ref": "#/definitions/Decimal"
                },
                {
                  "type": "null"
                }
              ]
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    },
    {
      "description": "Stake TEMA tokens",
      "type": "object",
      "required": [
        "stake"
      ],
      "properties": {
        "stake": {
          "type": "object",
          "properties": {
            "user": {
              "description": "User address",
              "type": [
                "string",
                "null"
              ]
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    },
    {
      "description": "Unstake/Withdraw TEMA tokens & claim claimables",
      "type": "object",
      "required": [
        "unstake"
      ],
      "properties": {
        "unstake": {
          "type": "object",
          "properties": {
            "tema_amount": {
              "description": "TEMA amount",
              "anyOf": [
                {
                  "$ref": "#/definitions/Uint128"
                },
                {
                  "type": "null"
                }
              ]
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    },
    {
      "description": "Restake unstak(ed/ing) TEMA",
      "type": "object",
      "required": [
        "restake"
      ],
      "properties": {
        "restake": {
          "type": "object",
          "required": [
            "tema_amount"
          ],
          "properties": {
            "tema_amount": {
              "description": "TEMA amount",
              "allOf": [
                {
                  "$ref": "#/definitions/Uint128"
                }
              ]
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    },
    {
      "description": "Claim all claimables",
      "type": "object",
      "required": [
        "claim_rewards"
      ],
      "properties": {
        "claim_rewards": {
          "type": "object",
          "required": [
            "restake"
          ],
          "properties": {
            "restake": {
              "description": "Toggle to restake TEMA rewards",
              "type": "boolean"
            },
            "send_to": {
              "description": "Send rewards to address",
              "type": [
                "string",
                "null"
              ]
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    },
    {
      "description": "Delegate TEMA to a Governator",
      "type": "object",
      "required": [
        "update_delegations"
      ],
      "properties": {
        "update_delegations": {
          "type": "object",
          "properties": {
            "commission": {
              "description": "Update commission rate",
              "anyOf": [
                {
                  "$ref": "#/definitions/Decimal"
                },
                {
                  "type": "null"
                }
              ]
            },
            "delegate": {
              "description": "Delegate or Undelegate",
              "type": [
                "boolean",
                "null"
              ]
            },
            "fluid": {
              "description": "Set fluidity To change fluidity, you must undelegate & redelegate because your delegate may have delegated your TEMA",
              "type": [
                "boolean",
                "null"
              ]
            },
            "governator_addr": {
              "description": "Governator address",
              "type": [
                "string",
                "null"
              ]
            },
            "tema_amount": {
              "description": "TEMA amount If None, act on total delegatible TEMA",
              "anyOf": [
                {
                  "$ref": "#/definitions/Uint128"
                },
                {
                  "type": "null"
                }
              ]
            },
            "voting_power_delegation": {
              "description": "Toggle voting power delegation",
              "type": [
                "boolean",
                "null"
              ]
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    },
    {
      "description": "Delegate delegated TEMA i.e. TEMA that is fluid delegated to a governator Once delegated, the TEMA can't be undelegated by the governator, only the initial staker",
      "type": "object",
      "required": [
        "delegate_fluid_delegations"
      ],
      "properties": {
        "delegate_fluid_delegations": {
          "type": "object",
          "required": [
            "governator_addr"
          ],
          "properties": {
            "governator_addr": {
              "description": "Governator address",
              "type": "string"
            },
            "tema_amount": {
              "description": "TEMA amount If None, act on total delegatible TEMA",
              "anyOf": [
                {
                  "$ref": "#/definitions/Uint128"
                },
                {
                  "type": "null"
                }
              ]
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    },
    {
      "description": "Position's contract deposits protocol revenue",
      "type": "object",
      "required": [
        "deposit_fee"
      ],
      "properties": {
        "deposit_fee": {
          "type": "object",
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    },
    {
      "description": "Clear FeeEvent state object",
      "type": "object",
      "required": [
        "trim_fee_events"
      ],
      "properties": {
        "trim_fee_events": {
          "type": "object",
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    }
  ],
  "definitions": {
    "Decimal": {
      "description": "A fixed-point decimal value with 18 fractional digits, i.e. Decimal(1_000_000_000_000_000_000) == 1.0\n\nThe greatest possible value that can be represented is 340282366920938463463.374607431768211455 (which is (2^128 - 1) / 10^18)",
      "type": "string"
    },
    "StakeDistribution": {
      "type": "object",
      "required": [
        "duration",
        "rate"
      ],
      "properties": {
        "duration": {
          "description": "Duration of distribution in days",
          "type": "integer",
          "format": "uint64",
          "minimum": 0.0
        },
        "rate": {
          "description": "Distribution rate",
          "allOf": [
            {
              "$ref": "#/definitions/Decimal"
            }
          ]
        }
      },
      "additionalProperties": false
    },
    "Uint128": {
      "description": "A thin wrapper around u128 that is using strings for JSON encoding/decoding, such that the full u128 range can be used for clients that convert JSON numbers to floats, like JavaScript and jq.\n\n# Examples\n\nUse `from` to create instances of this and `u128` to get the value out:\n\n``` # use cosmwasm_std::Uint128; let a = Uint128::from(123u128); assert_eq!(a.u128(), 123);\n\nlet b = Uint128::from(42u64); assert_eq!(b.u128(), 42);\n\nlet c = Uint128::from(70u32); assert_eq!(c.u128(), 70); ```",
      "type": "string"
    }
  }
}
